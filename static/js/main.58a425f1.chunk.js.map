{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sorting","setSorting","reverse","setReverse","reorderedGoods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,kDAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,iBAAAA,M,KAKE,IAAME,EAAgB,WAC3B,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAyBMC,EAvBoB,WACxB,IAAMC,EAAY,UAAOR,GAmBzB,OAjBAQ,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKJ,EAASa,SACZ,OAAQF,EAAMG,cAAcF,GAE9B,KAAKZ,EAASe,OACZ,OAAQJ,EAAMK,OAASJ,EAAMI,OAE/B,QACE,OAAO,MAITV,GACFG,EAAaH,UAGRG,EAGcQ,GAEvB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEd,IAAYJ,EAASa,SACjB,iBACA,0BAENO,QAAS,kBAAMf,EAAWL,EAASa,WAPrC,iCAYA,wBACEM,KAAK,SACLD,UACEd,IAAYJ,EAASe,OACjB,oBACA,6BAENK,QAAS,kBAAMf,EAAWL,EAASe,SAPrC,4BAWA,wBACEI,KAAK,SACLD,UACEZ,EACI,oBACA,6BAENc,QAAS,kBAAMb,GAAYD,IAP7B,sBAYEA,GAAWF,IACX,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPf,EAAW,IACXE,GAAW,IALf,sBAaJ,6BACE,6BACGC,EAAea,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCxGpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.58a425f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\nexport const App: React.FC = () => {\n  const [sorting, setSorting] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const getReorderedGoods = () => {\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sorting) {\n        case SortType.ALPHABET:\n          return (good1.localeCompare(good2));\n\n        case SortType.LENGTH:\n          return (good1.length - good2.length);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (reverse) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const reorderedGoods = getReorderedGoods();\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sorting === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'\n          }\n          onClick={() => setSorting(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sorting === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={() => setSorting(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={\n            reverse\n              ? 'button is-warning'\n              : 'button is-warning is-light'\n          }\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(reverse || sorting) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSorting('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}